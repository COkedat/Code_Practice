"""문제
윤이, 달구, 포닉스는 UDPC에 참가하는 여러분을 위해 클로버를 만들어 선물하기로 했다. 클로버는 줄기와 잎으로 이루어져 있으며, 하나의 줄기에 
$3$개 또는 
$4$개의 잎이 달려야 한다.

클로버 조립을 맡은 포닉스는 윤이로부터 
$A$개의 클로버 줄기를, 달구로부터 
$B$개의 클로버 잎을 받았다. 포닉스는 클로버를 조립하다 문득 이대로라면 쓰지 못한 줄기나 잎이 남을 수 있다는 사실을 깨닫고 말았다. 포닉스는 재료가 남는 것을 막기 위해 클로버 줄기 또는 잎을 더 가져오려 한다. 줄기와 잎을 남김없이 모두 써서 클로버를 만들기 위해 포닉스가 더 가져와야 하는 클로버 줄기와 잎 개수의 합의 최솟값을 구해주자.

입력
첫째 줄에 테스트케이스의 개수 
$T$가 주어진다. 
$(1 \le T \le 1\ 000)$ 

둘째 줄부터 
$T$줄에 걸쳐 클로버 줄기의 개수 
$A$, 클로버 잎의 개수 
$B$가 공백으로 구분되어 주어진다. 
$(0 \le A, B \le 1\ 000)$ 

출력
각 테스트케이스에 대해 포닉스가 더 가져와야 하는 클로버 줄기와 잎 개수의 합의 최솟값을 한 줄에 하나씩 순서대로 출력한다."""
def chkClover(A, B):
    answer = 0
    # A * 4
    A_4 = 4 * A

    # 잎 개수가 4*A 보다 크다면
    if B > A_4:
        # 현재 줄기*4 만큼 B를 빼준 남은 잎 수
        num = B - A_4
        # answer에 남은 잎수 // 4 를 해준 줄기 개수
        # 그리고 나눈 후 나머지를 땜빵해줄 줄기 개수추가 (0 가능)
        answer += (num // 4) + (1 if num % 4 else 0)
        # 나온 줄기 수를 A에 추가
        A += answer
    # A * 3
    A_3 = 3 * A

    # 잎 개수가 3*A 보다 작다면
    if B < A_3:
        # 잎의 수를 answer에 추가
        answer += A_3 - B
    return answer

from sys import stdin
input = stdin.readline
N = int(input())
for _ in range(N):
    # 클로버 줄기의 개수 A, 클로버 잎의 개수 B
    A, B = map(int,input().strip().split(" "))
    print(chkClover(A,B))


